@0
000001_00000_01001_0000001111101000 //addi R9, R0, 1000 (R9 Stores the max index)
@4
000011_00000_01111_0000001111101000 //lw R15, 1000(R0) (R15 Stores the max)
@8
000001_00000_00001_0000000001010000  //addi R1, R0, 80
@c
000000_00000_00000_0000000000000000 //LOOP
@10
000000_00000_00000_0000000000000000 //NOP
@14
000000_00000_00000_0000000000000000 //NOP
@18
000101_00001_00000_0000000000010010 //beq R1, R0, END_LOOP
@1C
000000_00000_00000_0000000000000000 //NOP
@20
000011_00001_01110_0000001111101000 //lw R14, 1000(R1)
@24
000000_01111_01110_01010_00000_101010 //slt R10, R15, R14 (R14 > R15)
@28
000000_00000_00000_0000000000000000 //NOP
@2C
000000_00000_00000_0000000000000000 //NOP
@30
000101_00000_01010_0000000000001111 //beq R10, R0, Go to inst R4 = R4-5
@34
000000_01110_00000_01111_00000_100000 //add R15, R14, R0
@38
000000_00001_00000_01001_00000_100000 //add R9, R1, R0
@3C
000001_00001_00001_1111111111111100 //addi R1, R1, -4
@40
000000_00000_00000_0000000000000000 //NOP
@44
000110_00000000000000000000000011 //jump LOOP
@48
000000_00000_00000_0000000000000000 //END_LOOP
@4C
000001_01001_01001_0000001111101000 //addi R9, R9, 1000
@50
000100_00000_01001_0000011111010100 //sw R9, 2004(R0)
@54
000100_00000_01111_0000011111010000 //sw R15, 2000(R0)